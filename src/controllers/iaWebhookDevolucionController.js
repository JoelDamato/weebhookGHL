const path = require('path');
const { createCanvas, loadImage, registerFont } = require('canvas');
const axios = require('axios');

// 1. MOVER LA FUNCIÃ“N HELPER AFUERA
// Es mÃ¡s eficiente definirla una sola vez a nivel de mÃ³dulo.
function wrapText(ctx, text, x, y, maxWidth, lineHeight) {
Â  const paragraphs = text.split('\n');
Â  for (let para of paragraphs) {
Â  Â  const words = para.split(' ');
Â  Â  let line = '';
Â  Â  for (let n = 0; n < words.length; n++) {
Â  Â  Â  const testLine = line + words[n] + ' ';
Â  Â  Â  const metrics = ctx.measureText(testLine);
Â  Â  Â  const testWidth = metrics.width;
Â  Â  Â  if (testWidth > maxWidth && n > 0) {
Â  Â  Â  Â  ctx.fillText(line, x, y);
Â  Â  Â  Â  line = words[n] + ' ';
Â  Â  Â  Â  y += lineHeight;
Â  Â  Â  } else {
Â  Â  Â  Â  line = testLine;
Â  Â  Â  }
Â  Â  }
Â  Â  ctx.fillText(line, x, y);
Â  Â  y += lineHeight + 10; // espacio extra entre pÃ¡rrafos
Â  }
}


exports.handleIaWebhookDevolucion = async (req, res) => {
Â  console.log('ðŸš€ Generando devoluciÃ³n...');

Â  try {
    // 2. MOVER Y CORREGIR EL REGISTRO DE LA FUENTE
    // La ruta '..' es correcta si este archivo estÃ¡ en 'src/controllers'.
Â  Â  const fontPath = path.join(__dirname, '..', 'fonts', '29lt-riwaya-regular.ttf');
    // Se usa el nombre de familia correcto '29LT Riwaya'.
Â  Â  registerFont(fontPath, { family: '29LT Riwaya' });
Â  Â  console.log(`ðŸ”¤ Fuente registrada: '29LT Riwaya'`);


Â  Â  const {
Â  Â  Â  nombre = 'Nombre de Prueba',
Â  Â  Â  fade = '',
Â  Â  Â  visagismo = '',
Â  Â  Â  detalles = '',
Â  Â  Â  consejo = ''
Â  Â  } = req.body;
Â  Â  const imageUrl = 'https://i.ibb.co/xdXwwHg/Devolucio-n1domingo.png';

Â  Â  // Descargar imagen base
Â  Â  const response = await axios.get(imageUrl, { responseType: 'arraybuffer' });
Â  Â  const buffer = Buffer.from(response.data, 'binary');
Â  Â  const img = await loadImage(buffer);

Â  Â  // Crear canvas
Â  Â  const canvas = createCanvas(img.width, img.height);
Â  Â  const ctx = canvas.getContext('2d');
Â  Â  ctx.drawImage(img, 0, 0);

Â  Â  // === Estilo general ===
Â  Â  ctx.fillStyle = 'white';
Â  Â  ctx.textBaseline = 'top';
Â  Â  ctx.textAlign = 'center';

    // 3. USAR EL NOMBRE DE FAMILIA CORRECTO AL APLICAR LA FUENTE
Â  Â  // ===== Nombre centrado =====
Â  Â  ctx.font = '30px "29LT Riwaya"';
Â  Â  ctx.fillText(nombre, img.width / 2, img.height * 0.212);

Â  Â  // ===== Estilo para bloques de texto =====
Â  Â  ctx.font = '22px "29LT Riwaya"';
Â  Â  const centerX = img.width / 2;
Â  Â  const maxWidth = img.width * 0.75;

Â  Â  // ===== PuntuaciÃ³n del corte (Fade) =====
Â  Â  if (fade) {
Â  Â  Â  wrapText(ctx, `â€¢ ${fade}`, centerX, img.height * 0.447, maxWidth, 36);
Â  Â  }
Â  Â  // ===== Visagismo =====
Â  Â  if (visagismo) {
Â  Â  Â  wrapText(ctx, `â€¢ ${visagismo}`, centerX, img.height * 0.591, maxWidth, 36);
Â  Â  }
Â  Â  // ===== Detalles del corte =====
Â  Â  if (detalles) {
Â  Â  Â  wrapText(ctx, `â€¢ ${detalles}`, centerX, img.height * 0.729, maxWidth, 36);
Â  Â  }
Â  Â  // ===== Consejo =====
Â  Â  if (consejo) {
Â  Â  Â  wrapText(ctx, `â€¢ ${consejo}`, centerX, img.height * 0.867, maxWidth, 36);
Â  Â  }

Â  Â  console.log('âœ… DevoluciÃ³n generada correctamente');

Â  Â  // Enviar imagen como respuesta
Â  Â  res.set('Content-Type', 'image/png');
Â  Â  canvas.createPNGStream().pipe(res);

Â  } catch (error) {
Â  Â  console.error('ðŸ’¥ Error al generar la devoluciÃ³n:', error);
Â  Â  res.status(500).json({ error: 'Error generando devoluciÃ³n' });
Â  }
};